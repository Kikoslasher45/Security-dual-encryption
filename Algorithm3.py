#EL GAMAL cryptographic system
def extendEuclid(a, b):
    a_original=a
    b_original=b
    x=[]
    y=[]
    x.append(1)
    x.append(0)
    y.append(0)
    y.append(1)
    index=2
    while(b!=0):
        q=a//b
        r=a%b
        if r==0:
            break
        x.append(x[index-2]-q*x[index-1])
        y.append(y[index-2]-q*y[index-1])
        a=b
        b=r
        index+=1
    if x[index-1]<0:
        x[index-1]+=b_original
    if y[index-1]<0:
        y[index-1]+=a_original
    return x[index-1],y[index-1]        

def elgamal_decrypt( C1, C2,Xa,q):
    # User A
    # User A decrypts the message using the random number
    # generated by user B and sends it to user B
    C1=int(C1)
    C2=int(C2)
    K = C1**Xa % q
    # print("User A computes K: ", K)
    x,y= extendEuclid(q, K);
    # print("x,y: ", x,y)
    K_inverse=y
    # print("user A computes K_inverse: ", K_inverse)
    M = C2*K_inverse % q
    # print("User A decrypts the message: ", M)
    return M


def splitCipherToList(C2,length):
    C2List=[]
    for i in range(0,len(C2),length):
        C2List.append(C2[i:i+length])
    return C2List
